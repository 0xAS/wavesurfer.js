"use strict";var WaveSurfer={defaultParams:{waveColor:"#999",progressColor:"#333",cursorColor:"#ddd",cursorWidth:1,markerWidth:1,skipLength:2,minPxPerSec:1,pixelRatio:1,fillParent:!0,scrollParent:!1,AudioContext:null,container:null,renderer:"Canvas"},init:function(params){this.params=WaveSurfer.util.extend({},this.defaultParams,params),this.drawer=Object.create(WaveSurfer.Drawer[this.params.renderer]),this.drawer.init(this.params),this.drawer.on("redraw",this.drawBuffer.bind(this)),this.markers={},this.createBackend(),this.bindClick(),this.savedVolume=-1,this.isMuted=!1},createBackend:function(){var my=this;this.backend=Object.create(WaveSurfer.WebAudio),this.backend.on("audioprocess",function(){my.fireEvent("progress")}),this.on("progress",function(){my.drawer.progress(my.backend.getPlayedPercents())}),this.backend.init(this.params)},playAt:function(percents){this.backend.play(this.backend.getDuration()*percents)},play:function(){this.backend.play()},pause:function(){this.backend.pause()},playPause:function(){this.backend.isPaused()?this.play():this.pause()},skipBackward:function(seconds){this.skip(seconds||-this.params.skipLength)},skipForward:function(seconds){this.skip(seconds||this.params.skipLength)},skip:function(offset){var timings=this.timings(offset),progress=timings[0]/timings[1];this.seekTo(progress)},seekTo:function(progress){var paused=this.backend.isPaused();this.playAt(progress),paused&&(this.pause(),this.fireEvent("progress")),this.fireEvent("seek",progress)},stop:function(){this.playAt(0),this.pause(),this.drawer.progress(0)},setVolume:function(newVolume){this.backend.setVolume(newVolume)},toggleMute:function(){this.isMuted?(this.backend.setVolume(this.savedVolume),this.savedVolume=-1,this.isMuted=!1):(this.savedVolume=this.backend.getVolume(),this.backend.setVolume(-1),this.isMuted=!0)},mark:function(options){var my=this,opts=WaveSurfer.util.extend({id:WaveSurfer.util.getId(),position:this.backend.getCurrentTime(),width:this.params.markerWidth},options),marker=Object.create(WaveSurfer.Mark);return marker.on("update",function(){var duration=my.backend.getDuration()||1;null==marker.position&&(marker.position=marker.percentage*duration),marker.percentage=marker.position/duration,my.drawer.addMark(marker),my.markers[marker.id]=marker}),marker.on("remove",function(){my.drawer.removeMark(marker),delete my.markers[marker.id]}),marker.update(opts)},clearMarks:function(){Object.keys(this.markers).forEach(function(id){this.markers[id].remove()},this)},timings:function(offset){var position=this.backend.getCurrentTime()||0,duration=this.backend.getDuration()||1;return position=Math.max(0,Math.min(duration,position+(offset||0))),[position,duration]},drawBuffer:function(){var duration=this.backend.getDuration()||1;Object.keys(this.markers).forEach(function(id){var marker=this.markers[id];marker.update({percentage:marker.position/duration})},this);var pixels=this.drawer.getPixels(duration),peaks=this.backend.getPeaks(pixels),max=this.backend.getMaxPeak();this.drawer.drawPeaks(peaks,max)},load:function(url){var my=this,xhr=new XMLHttpRequest;xhr.open("GET",url,!0),xhr.send(),xhr.responseType="arraybuffer",xhr.addEventListener("progress",function(e){var percentComplete;percentComplete=e.lengthComputable?e.loaded/e.total:e.loaded/(e.loaded+1e6),my.fireEvent("loading",percentComplete)}),xhr.addEventListener("load",function(e){my.fireEvent("loading",1),my.backend.loadBuffer(e.target.response,function(){my.fireEvent("loading",100),my.drawBuffer(),my.fireEvent("ready")})})},bindDragNDrop:function(dropTarget){var my=this,reader=new FileReader;reader.addEventListener("load",function(e){my.backend.loadBuffer(e.target.result,function(){my.drawBuffer(),my.fireEvent("ready")})},!1),(dropTarget||document).addEventListener("drop",function(e){e.preventDefault();var file=e.dataTransfer.files[0];file&&reader.readAsArrayBuffer(file)},!1)},bindClick:function(){var my=this;this.drawer.on("click",function(progress){my.seekTo(progress)})},bindMarks:function(){var my=this,markers=this.markers;this.on("progress",function(){Object.keys(markers).forEach(function(id){var marker=markers[id],position=marker.position.toPrecision(3),time=my.backend.getCurrentTime().toPrecision(3);position==time&&(my.fireEvent("mark",marker),marker.fireEvent("reached"))})})},empty:function(){this.stop(),this.backend.loadEmpty(),this.drawer.drawPeaks({length:this.drawer.getWidth()},0)}};WaveSurfer.Mark={id:null,position:0,percentage:0,width:1,color:"",getTitle:function(){var d=new Date(1e3*this.position);return d.getMinutes()+":"+d.getSeconds()},update:function(options){return Object.keys(options).forEach(function(key){key in this&&(this[key]=options[key])},this),null==options.position&&null!=options.percentage&&(this.position=null),this.fireEvent("update"),this},remove:function(){this.fireEvent("remove")}},WaveSurfer.Observer={on:function(event,fn){this.handlers||(this.handlers={});var handlers=this.handlers[event];handlers||(handlers=this.handlers[event]=[]),handlers.push(fn)},un:function(event,fn){if(this.handlers){var handlers=this.handlers[event];if(handlers)if(fn)for(var i=handlers.length-1;i>=0;i--)handlers[i]==fn&&handlers.splice(i,1);else handlers.length=0}},fireEvent:function(event,data){if(this.handlers){var handlers=this.handlers[event];if(handlers)for(var i=0,len=handlers.length;len>i;i+=1)handlers[i](data)}}},WaveSurfer.util={extend:function(dest){var sources=Array.prototype.slice.call(arguments,1);return sources.forEach(function(source){null!=source&&Object.keys(source).forEach(function(key){dest[key]=source[key]})}),dest},getId:function(){return"wavesurfer_"+Math.random().toString(32).substring(2)}},WaveSurfer.util.extend(WaveSurfer,WaveSurfer.Observer),WaveSurfer.util.extend(WaveSurfer.Mark,WaveSurfer.Observer),WaveSurfer.WebAudio={init:function(params){this.ac=params.AudioContext||new(window.AudioContext||window.webkitAudioContext),this.createScriptNode(),this.createVolumeNode()},createScriptNode:function(){var my=this;this.scriptNode=this.ac.createScriptProcessor?this.ac.createScriptProcessor(256):this.ac.createJavaScriptNode(256),this.scriptNode.connect(this.ac.destination),this.scriptNode.onaudioprocess=function(){my.source&&!my.isPaused()&&(my.getCurrentTime()>=my.scheduledPause?my.pause():my.fireEvent("audioprocess"))}},createVolumeNode:function(){this.gainNode=this.ac.createGain?this.ac.createGain():this.ac.createGainNode(),this.gainNode.connect(this.ac.destination)},setVolume:function(newGain){this.gainNode.gain.value=newGain},getVolume:function(){return this.gainNode.gain.value},refreshBufferSource:function(){this.source&&this.source.disconnect(),this.source=this.ac.createBufferSource(),this.buffer&&(this.source.buffer=this.buffer),this.source.connect(this.scriptNode),this.source.connect(this.ac.destination),this.source.connect(this.gainNode)},setBuffer:function(buffer){this.lastPause=0,this.lastStart=0,this.startTime=0,this.buffer=buffer,this.refreshBufferSource()},loadBuffer:function(arraybuffer,cb,errb){var my=this;this.source&&this.pause(),this.ac.decodeAudioData(arraybuffer,function(buffer){my.setBuffer(buffer),cb&&cb(buffer)},function(){console.error("Error decoding audio buffer"),errb&&errb()})},loadEmpty:function(){this.pause(),this.setBuffer(0)},isPaused:function(){return this.paused},getDuration:function(){return this.buffer.duration},play:function(start,end){this.refreshBufferSource(),null==start&&(start=this.getCurrentTime()),null==end&&(end=this.getDuration()),start>end&&(start=0),this.lastStart=start,this.startTime=this.ac.currentTime,this.paused=!1,this.scheduledPause=end,this.source.start?this.source.start(0,start,end-start):this.source.noteGrainOn(0,start,end-start)},pause:function(){this.lastPause=this.lastStart+(this.ac.currentTime-this.startTime),this.paused=!0,this.source.stop?this.source.stop(0):this.source.noteOff(0)},getPeaks:function(length,sampleStep){sampleStep=sampleStep||128;for(var buffer=this.buffer,k=buffer.length/length,peaks=new Float32Array(length),c=0;buffer.numberOfChannels>c;c++)for(var chan=buffer.getChannelData(c),i=0;length>i;i++){for(var peak=-1/0,start=~~(i*k),end=(i+1)*k,j=start;end>j;j+=sampleStep){var val=chan[j];val>peak?peak=val:-val>peak&&(peak=-val)}c>0?peaks[i]+=peak:peaks[i]=peak}return peaks},getMaxPeak:function(){return 1*this.buffer.numberOfChannels},getPlayedPercents:function(){var duration=this.getDuration();return duration>0?this.getCurrentTime()/duration:0},getCurrentTime:function(){return this.isPaused()?this.lastPause:this.lastStart+(this.ac.currentTime-this.startTime)}},WaveSurfer.util.extend(WaveSurfer.WebAudio,WaveSurfer.Observer),WaveSurfer.Drawer={init:function(params){if(this.params=params,this.pixelRatio=this.params.pixelRatio,this.container=this.params.container,this.width=this.container.clientWidth*this.pixelRatio,this.height=this.container.clientHeight*this.pixelRatio,this.lastPos=0,this.createElements(),this.bindClick(),this.params.fillParent){var my=this;window.addEventListener("resize",function(){my.container.scrollWidth!=my.scrollWidth&&my.fireEvent("redraw")})}},drawPeaks:function(peaks,max){this.setWidth(peaks.length),this.drawWave(peaks,max)},style:function(el,styles){Object.keys(styles).forEach(function(prop){el.style[prop]=styles[prop]})},bindClick:function(){var my=this;this.container.addEventListener("click",function(e){var relX=e.offsetX;null==relX&&(relX=e.layerX);var progress=relX/my.scrollWidth;my.fireEvent("click",progress)},!1)},addScroll:function(){this.style(this.container,{overflowX:"scroll",overflowY:"hidden"})},recenter:function(percent){var position=this.scrollWidth*percent;this.recenterOnPosition(position,!0)},recenterOnPosition:function(position,immediate){var scrollLeft=this.container.scrollLeft,half=this.container.clientWidth/2,target=position-half,offset=target-scrollLeft;if(!immediate&&offset>=-half&&half>offset){var rate=5;offset=Math.max(-rate,Math.min(rate,offset)),target=scrollLeft+offset}offset>0&&(this.container.scrollLeft=target)},getPixels:function(duration){var width=Math.ceil(duration*this.params.minPxPerSec);return this.params.fillParent&&(width=Math.max(this.container.clientWidth,width)),width*this.pixelRatio},getWidth:function(){return this.width},setWidth:function(width){this.width=width,this.scrollWidth=Math.round(this.width/this.pixelRatio),this.params.scrollParent&&this.addScroll(),this.updateWidth()},progress:function(progress){var minPxDelta=1/this.pixelRatio,pos=Math.round(progress*this.width*this.pixelRatio)*minPxDelta;(this.lastPos>pos||pos-this.lastPos>=minPxDelta)&&(this.lastPos=pos,this.params.scrollParent&&this.recenterOnPosition(~~(this.scrollWidth*progress)),this.updateProgress(progress))},createElements:function(){},updateWidth:function(){},drawWave:function(){},updateProgress:function(){},addMark:function(){},removeMark:function(){}},WaveSurfer.util.extend(WaveSurfer.Drawer,WaveSurfer.Observer),WaveSurfer.Drawer.Canvas=Object.create(WaveSurfer.Drawer),WaveSurfer.util.extend(WaveSurfer.Drawer.Canvas,{createElements:function(){var waveCanvas=document.createElement("canvas");this.style(waveCanvas,{position:"absolute",zIndex:1});var waveCc=waveCanvas.getContext("2d"),progressWave=document.createElement("wave");this.style(progressWave,{position:"absolute",zIndex:2,overflow:"hidden",width:"0",borderRight:[this.params.cursorWidth+"px","solid",this.params.cursorColor].join(" ")});var progressCanvas=document.createElement("canvas"),progressCc=progressCanvas.getContext("2d");progressWave.appendChild(progressCanvas);var marksCanvas=document.createElement("canvas");this.style(marksCanvas,{position:"absolute",zIndex:3});var marksCc=marksCanvas.getContext("2d"),wrapper=document.createElement("wave");this.style(wrapper,{position:"relative"}),wrapper.appendChild(waveCanvas),wrapper.appendChild(progressWave),wrapper.appendChild(marksCanvas),this.container.appendChild(wrapper),this.canvases=[waveCanvas,progressCanvas,marksCanvas],this.waveCc=waveCc,this.progressCc=progressCc,this.progressWave=progressWave,this.marksCc=marksCc,this.marks={}},updateWidth:function(){this.canvases.forEach(function(canvas){canvas.width=this.width,canvas.height=this.height,this.params.fillParent&&!this.params.scrollParent?this.style(canvas,{width:this.container.clientWidth+"px",height:this.container.clientHeight+"px"}):this.style(canvas,{width:Math.round(this.width/this.pixelRatio)+"px",height:Math.round(this.height/this.pixelRatio)+"px"})},this)},drawWave:function(peaks,max){for(var i=0;this.width>i;i++){var h=max>0?Math.round(peaks[i]*(this.height/max)):1,y=Math.round((this.height-h)/2);this.waveCc.fillStyle=this.params.waveColor,this.waveCc.fillRect(i,y,1,h),this.progressCc.fillStyle=this.params.progressColor,this.progressCc.fillRect(i,y,1,h)}},updateProgress:function(progress){var pos=Math.round(this.width*progress)/this.pixelRatio;this.progressWave.style.width=pos+"px"},addMark:function(mark){var redraw=mark.id in this.marks;this.marks[mark.id]=mark,redraw?this.redrawMarks():this.drawMark(mark)},removeMark:function(mark){delete this.marks[mark.id],this.redrawMarks()},drawMark:function(mark){this.marksCc.fillStyle=mark.color;var x=Math.round(mark.percentage*this.width-mark.width/2);this.marksCc.fillRect(x,0,mark.width,this.height)},redrawMarks:function(){this.marksCc.clearRect(0,0,this.width,this.height),Object.keys(this.marks).forEach(function(id){this.drawMark(this.marks[id])},this)}}),WaveSurfer.Drawer.SVG=Object.create(WaveSurfer.Drawer),WaveSurfer.util.extend(WaveSurfer.Drawer.SVG,{attr:function(node,attrs){Object.keys(attrs).forEach(function(key){node.setAttribute(key,attrs[key])})},node:function(name,attrs){var node=document.createElementNS("http://www.w3.org/2000/svg",name);return attrs&&this.attr(node,attrs),node},createElements:function(){var svg=this.node("svg",{viewBox:[0,0,this.width,this.height].join(" ")}),defs=this.node("defs"),pathId=WaveSurfer.util.getId(),path=this.node("path",{id:pathId});defs.appendChild(path);var clipId=WaveSurfer.util.getId(),clip=this.node("clipPath",{id:clipId}),clipRect=this.node("rect",{width:0,height:this.height});clip.appendChild(clipRect),defs.appendChild(clip);var useWave=this.node("use",{stroke:this.params.waveColor,"class":"wavesurfer-wave"});useWave.href.baseVal="#"+pathId;var useClip=this.node("use",{stroke:this.params.progressColor,"clip-path":"url(#"+clipId+")","class":"wavesurfer-progress"});useClip.href.baseVal="#"+pathId,this.cursorWidth=this.params.cursorWidth*this.pixelRatio;var cursor=this.node("rect",{width:this.cursorWidth,height:this.height,fill:this.params.cursorColor,"class":"wavesurfer-cursor"});[defs,useWave,useClip,cursor].forEach(function(node){svg.appendChild(node)}),this.container.appendChild(svg),this.svg=svg,this.wavePath=path,this.progressPath=clipRect,this.cursor=cursor},updateWidth:function(){this.attr(this.svg,{viewBox:[0,0,this.width,this.height].join(" ")}),this.params.scrollParent&&this.attr(this.svg,{width:this.scrollWidth,height:"100%"})},drawWave:function(peaks,max){var height=this.height,pathData=[];if(0==max)pathData.push("M",0,Math.round(height/2),"l",this.width,0);else for(var factor=height/max,i=0;this.width>i;i++){var h=Math.round(peaks[i]*factor),y=Math.round((height-h)/2);pathData.push("M",i,y,"l",0,h)}this.wavePath.setAttribute("d",pathData.join(" "))},updateProgress:function(){this.progressPath.setAttribute("width",this.lastPos),this.cursor.setAttribute("x",Math.min(this.lastPos-~~(this.params.cursorWidth/2),this.width-this.params.cursorWidth))},addMark:function(mark){var markRect=document.getElementById(mark.id);if(markRect)var title=markRect.querySelector("title");else markRect=this.node("rect"),markRect.setAttribute("id",mark.id),this.svg.appendChild(markRect),title=this.node("title"),markRect.appendChild(title);this.attr(markRect,{fill:mark.color,width:mark.width,height:this.height,x:Math.round(mark.percentage*this.width)}),title.textContent=mark.getTitle()},removeMark:function(mark){var markRect=document.getElementById(mark.id);markRect&&this.svg.removeChild(markRect)}});